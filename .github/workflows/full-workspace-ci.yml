name: Full Workspace CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  full-workspace-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build All JavaScript Packages
        run: |
          echo "üèóÔ∏è Building all JavaScript packages..."
          make build-js
          
      - name: Format All JavaScript Packages
        run: |
          echo "‚ú® Formatting all JavaScript packages..."
          make format-js
          
      - name: Type-check All JavaScript Packages
        run: |
          echo "üîç Type-checking all JavaScript packages..."
          make typecheck-js

      - name: Lint All JavaScript Packages
        run: |
          echo "üßπ Linting all JavaScript packages..."
          make lint-js

      - name: Test All JavaScript Packages
        run: |
          echo "üß™ Testing all JavaScript packages..."
          make test-js

      - name: Clean up Docker resources
        if: always()
        run: |
          docker system prune -f || true

  rust-contracts:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        contract: [social-onsocial, marketplace-onsocial, staking-onsocial, ft-wrapper-onsocial]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create .env file
        run: |
          cat <<EOL > .env
          NETWORK=sandbox
          AUTH_ACCOUNT=test.near
          FT_ACCOUNT=test.near
          RELAYER_ACCOUNT=test.near
          NEAR_NODE_URL=http://localhost:3030
          EOL

      - name: Install Make
        run: sudo apt-get update && sudo apt-get install -y make

      - name: Cache Rust artifacts
        uses: actions/cache@v4
        with:
          path: |
            target/
            ~/.cargo
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Build Docker image
        run: make build-docker-rs

      - name: Format Rust code
        run: make format-${{ matrix.contract }}-rs

      - name: Build contract
        run: make build-${{ matrix.contract }}-rs

      - name: Test contract
        run: make test-${{ matrix.contract }}-rs
